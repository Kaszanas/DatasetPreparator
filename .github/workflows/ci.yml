name: continuous integration (ci)

on: [pull_request, workflow_dispatch]

# To successfully find the files that are required for testing:
env:
  TEST_WORKSPACE: ${{ github.workspace }}

jobs:

  pre_commit:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:

      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Build Dev Docker Image
        run: |
          make build_dev

      - name: Docker Run pre-commit on all files.
        run: |
          make docker_pre_commit_action

  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11, 3.12]

    # Define job steps
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Build Dev Docker Image
        run: |
          make build_dev PYTHON_VERSION=${{ matrix.python-version }}

      - name: Build Docker Image With Python ${{ matrix.python-version }}
        run: |
          make build PYTHON_VERSION=${{ matrix.python-version }}

      - name: Run Docker Tests With Python ${{ matrix.python-version }}
        run: |
          make action_compose_test

        # REVIEW: Should this be replaced with Dockerized tests
      - name: Test with pytest
        run: poetry run pytest -m minor --ignore-glob='test_*.py' tests/test_cases/ --cov=datasetpreparator --cov-report term-missing --cov=xml

      # TODO: Catch errors and report them:
      - name: Docker Build Documentation
        run: make docker_doc_build_action
