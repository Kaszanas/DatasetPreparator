name: continuous integration (ci)

on:
  pull_request:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:

# To successfully find the files that are required for testing:
env:
  TEST_WORKSPACE: ${{ github.workspace }}

jobs:
  pre_commit:
    # Set up operating system
    runs-on: ubuntu-latest
    # Define job steps
    steps:
      - name: Check-out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Build Dev Docker Image
        run: |
          make docker_build_devcontainer

      - name: Docker Run pre-commit on all files.
        run: |
          make docker_pre_commit_action

  ci:
    # Set up operating system
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Quote this as strings... otherwise 3.10 will be interpreted as 3.1
        python-version: ['3.10', '3.11', '3.12']

    # Define job steps
    steps:
      - name: Check-out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Build Dev Docker Image
        run: |
          make docker_build_devcontainer PYTHON_VERSION=${{ matrix.python-version }}

      - name: Build Docker Image With Python ${{ matrix.python-version }}
        run: |
          make docker_build PYTHON_VERSION=${{ matrix.python-version }}

      - name: Run Docker Tests With Python ${{ matrix.python-version }}
        run: |
          make action_compose_test

      - name: Check Test Results
        run: |
          if [ $? -eq 0 ]; then
            echo "Tests ran successfully."
          else
            echo "Tests failed."
            exit 1
          fi

      # TODO: Catch errors and report them:
      - name: Docker Build Documentation
        run: make docker_doc_build_action
